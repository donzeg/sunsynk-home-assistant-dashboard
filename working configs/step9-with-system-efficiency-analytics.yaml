type: custom:layout-card
layout_type: custom:grid-layout
layout:
  grid-template-columns: 1fr 1fr 1fr
  grid-template-rows: auto auto auto auto auto auto auto auto
  grid-template-areas: |
    "flex2 flex3 flex1"
    "sunsynk plotly1 plotly1"
    "plotly2 plotly2 plotly2"
    "plotly3 plotly3 plotly3"
    "pie1 pie2 pie2"
    "temp temp temp"
    "efficiency efficiency efficiency"
    "financial financial financial"
cards:
  - type: custom:sunsynk-power-flow-card
    cardstyle: full
    large_font: true
    show_solar: true
    panel_mode: true
    card_height: 100%
    view_layout:
      grid-area: sunsynk
    inverter:
      modern: true
      colour: "#959595"
      autarky: power
    solar:
      mppts: 3
      show_daily: true
      colour: "#F4C430"
      animation_speed: 9
      max_power: 19565
      pv1_name: West
      pv2_name: North
      display_mode: 3
      auto_scale: true
      efficiency: 3
      pv3_name: East
      pv1_max_power: 10000
      pv2_max_power: 6440
      pv3_max_power: 3125
    battery:
      energy: 35000
      show_daily: true
      colour: pink
      animation_speed: 6
      max_power: 4100
      auto_scale: true
      show_absolute: true
      animate: true
      path_threshold: 90
    load:
      show_aux: false
      show_daily: true
      animation_speed: 8
      max_power: 8000
      load1_name: Water pump
      load1_icon: mdi:water-pump
      load3_icon: mdi:air-conditioner
      auto_scale: true
      path_threshold: 90
      additional_loads: 4
      load2_icon: mdi:water-pump-off
      off_threshold: 3
      load4_icon: mdi:air-conditioner
      load2_name: Borehole
      load3_name: Study AC
      load4_name: LvRoom AC
    grid:
      show_daily_buy: true
      no_grid_colour:
        - 125
        - 125
        - 125
      animation_speed: 8
      max_power: 8000
      auto_scale: true
      grid_off_colour:
        - 122
        - 0
        - 0
      grid_name: ""
      show_nonessential: true
    entities:
      use_timer_248: switch.deye_home_sunsynk_toggle_system_timer
      priority_load_243: switch.deye_home_sunsynk_toggle_priority_load
      day_battery_charge_70: sensor.deye_home_sunsynk_day_battery_charge
      day_battery_discharge_71: sensor.deye_home_sunsynk_day_battery_discharge
      day_load_energy_84: sensor.deye_home_sunsynk_day_load_energy
      day_grid_import_76: sensor.deye_home_sunsynk_total_grid_import
      day_grid_export_77: none
      day_pv_energy_108: sensor.deye_home_sunsynk_day_pv_energy
      inverter_voltage_154: sensor.deye_home_sunsynk_inverter_voltage
      load_frequency_192: sensor.deye_home_sunsynk_load_frequency
      inverter_current_164: sensor.deye_home_sunsynk_inverter_current
      inverter_power_175: sensor.deye_home_sunsynk_inverter_power
      grid_power_169: sensor.deye_home_sunsynk_grid_power
      pv1_power_186: sensor.deye_home_sunsynk_pv1_power
      pv2_power_187: sensor.deye_home_sunsynk_pv2_power
      pv3_power_188: sensor.deye_home_sunsynk_pv3_power
      pv4_power_189: none
      battery_voltage_183: sensor.deye_home_sunsynk_battery_voltage
      battery_soc_184: sensor.deye_home_sunsynk_battery_soc
      battery_power_190: sensor.deye_home_sunsynk_battery_power
      battery_current_191: sensor.deye_home_sunsynk_battery_current
      essential_power: sensor.deye_home_sunsynk_essential_power_1
      essential_load1: sensor.water_pump_phase_a_power
      essential_load3: sensor.study_ac_power
      nonessential_power: sensor.deye_home_sunsynk_nonessential_power_1
      grid_ct_power_172: sensor.deye_home_sunsynk_grid_ct_power
      pv1_voltage_109: sensor.deye_home_sunsynk_pv1_voltage
      pv1_current_110: sensor.deye_home_sunsynk_pv1_current
      pv2_voltage_111: sensor.deye_home_sunsynk_pv2_voltage
      pv2_current_112: sensor.deye_home_sunsynk_pv2_current
      grid_connected_status_194: binary_sensor.deye_home_sunsynk_grid_connected_status
      inverter_status_59: sensor.deye_home_sunsynk_overall_state
      aux_power_166: sensor.deye_home_sunsynk_aux_power
      remaining_solar: sensor.solcast_pv_forecast_forecast_remaining_today
      battery_temp_182: sensor.deye_home_sunsynk_battery_temperature
      radiator_temp_91: sensor.deye_home_sunsynk_radiator_temperature
      dc_transformer_temp_90: sensor.deye_home_sunsynk_dc_transformer_temperature
      prog1_time: sensor.deye_home_sunsynk_time_slot_1
      prog1_capacity: number.deye_home_sunsynk_prog1_capacity
      prog1_charge: switch.deye_home_sunsynk_prog1_grid_charge
      prog2_time: sensor.deye_home_sunsynk_time_slot_2
      prog2_capacity: number.deye_home_sunsynk_prog2_capacity
      prog2_charge: switch.deye_home_sunsynk_prog2_grid_charge
      prog3_time: sensor.deye_home_sunsynk_time_slot_3
      prog3_capacity: number.deye_home_sunsynk_prog3_capacity
      prog3_charge: switch.deye_home_sunsynk_prog3_grid_charge
      prog4_time: sensor.deye_home_sunsynk_time_slot_4
      prog4_capacity: number.deye_home_sunsynk_prog4_capacity
      prog4_charge: switch.deye_home_sunsynk_prog4_grid_charge
      prog5_time: sensor.deye_home_sunsynk_time_slot_5
      prog5_capacity: number.deye_home_sunsynk_prog5_capacity
      prog5_charge: switch.deye_home_sunsynk_prog5_grid_charge
      prog6_time: sensor.deye_home_sunsynk_time_slot_6
      prog6_capacity: number.deye_home_sunsynk_prog6_capacity
      prog6_charge: switch.deye_home_sunsynk_prog6_grid_charge
      essential_load1_extra: sensor.water_pump_total_energy
      essential_load3_extra: sensor.deye_home_sunsynk_day_load_energy_local
      environment_temp: sensor.bedroom_t_h_sensor_temperature
      prepaid_units: sensor.deye_home_sunsynk_grid_power
      essential_load2: sensor.borehole_switch_phase_a_power
      essential_load4: sensor.ac_switch_power
      essential_load4_extra: sensor.aedc_meter_total_energy
      essential_load2_extra: sensor.borehole_switch_total_energy
      pv3_voltage_113: sensor.deye_home_sunsynk_pv3_voltage
      pv3_current_114: sensor.deye_home_sunsynk_pv3_current
      total_pv_generation: sensor.deye_home_sunsynk_total_pv_energy
    dynamic_line_width: true
    wide: false

  - type: custom:plotly-graph
    view_layout:
      grid-area: plotly1
    entities:
      - entity: sensor.deye_home_sunsynk_solar_power
        name: |
          $fn ({ ys,meta }) =>
            "Solar" + "üîÜ" + "(" +ys[ys.length - 1]+"W)"
        fill: tozeroy
        line:
          color: rgb(255, 155, 48)
          shape: spline
      - entity: sensor.deye_home_sunsynk_essential_power_1
        name: |
          $fn ({ ys,meta }) =>
            "Load" + "‚ö°" + "(" +ys[ys.length - 1]+"W)"
        fill: tozeroy
        line:
          color: rgb(95, 182, 173)
          shape: spline
      - entity: sensor.deye_home_sunsynk_grid_ct_power
        name: |
          $fn ({ ys,meta }) =>
            "Grid" + "üí°" + "(" +ys[ys.length - 1]+"W)"
        fill: tozeroy
        line:
          color: rgb(84, 144, 194)
          shape: spline
      - entity: sensor.deye_home_sunsynk_battery_power
        fill: tozeroy
        name: |
          $fn ({ ys,meta }) =>
            "Battery" + "üîã" + "(" +ys[ys.length - 1]+"W)"
        line:
          color: rgb(243, 179, 202)
          shape: spline
      - entity: sensor.deye_home_sunsynk_battery_soc
        name: |
          $fn ({ ys,meta }) =>
            "SOC" + "‚ö†Ô∏è" + "(" +ys[ys.length - 1]+"%)"
        yaxis: y2
        line:
          color: red
          width: 1
          shape: spline
        fill: none
    hours_to_show: 24
    refresh_interval: 60
    title: null
    defaults:
      entity:
        show_value: false
      yaxes:
        fixedrange: true
    layout:
      legend:
        bgcolor: rgba(0,0,0,0)
        itemsizing: constant
        font:
          size: 11
      yaxis2:
        range:
          - 20
          - 105
        fixedrange: true
      yaxis:
        tickmode: linear
        dtick: 1000
    config:
      scrollZoom: false

  - type: custom:flex-horseshoe-card
    view_layout:
      grid-area: flex1
    entities:
      - entity: sensor.deye_home_sunsynk_essential_power_1
        unit: W
        name: AC
      - entity: sensor.deye_home_sunsynk_inverter_voltage
        decimals: 0
        unit: V
      - entity: sensor.deye_home_sunsynk_load_frequency
        decimals: 2
        unit: Hz
        name: Grid
      - entity: sensor.deye_home_sunsynk_grid_ct_power
        decimals: 0
        unit: W
        name: Grid
      - entity: sensor.deye_home_sunsynk_day_grid_import
        decimals: 2
        unit: kWh
        name: Import
      - entity: sensor.deye_home_sunsynk_day_load_energy
        decimals: 2
        unit: kWh
        name: Daily
    show:
      horseshoe_style: autominmax
    layout:
      hlines:
        - id: 0
          xpos: 50
          ypos: 40
          length: 70
          styles:
            - opacity: 0.2;
        - id: 0
          xpos: 50
          ypos: 60
          length: 70
          styles:
            - opacity: 0.2;
      vlines:
        - id: 0
          xpos: 50
          ypos: 50
          length: 18
          styles:
            - opacity: 0.2;
      states:
        - id: 0
          entity_index: 0
          xpos: 50
          ypos: 33
          styles:
            - font-size: 3em;
            - opacity: 0.9;
            - text-anchor: middle;
        - id: 1
          entity_index: 1
          xpos: 44
          ypos: 53
          styles:
            - font-size: 1.5em;
            - text-anchor: end;
        - id: 2
          entity_index: 2
          xpos: 55
          ypos: 53
          styles:
            - text-anchor: start;
            - font-size: 1.5em;
        - id: 3
          entity_index: 3
          xpos: 50
          ypos: 75
          styles:
            - text-anchor: middle;
            - font-size: 2em;
        - id: 4
          entity_index: 4
          xpos: 75
          ypos: 7
          styles:
            - text-anchor: start;
            - font-size: 1.2em;
        - id: 5
          entity_index: 5
          xpos: 0
          ypos: 7
          styles:
            - text-anchor: start;
            - font-size: 1.2em;
      icons:
        - id: 0
          entity_index: 1
          xpos: 30
          ypos: 52
          align: start
          size: 1
      names:
        - id: 0
          entity_index: 0
          xpos: 50
          ypos: 95
          styles:
            - font-size: 1.2em;
        - id: 1
          entity_index: 4
          xpos: 85
          ypos: 12
          styles:
            - font-size: 0.5em;
            - text-anchor: start;
        - id: 2
          entity_index: 5
          xpos: 0
          ypos: 12
          styles:
            - font-size: 0.5em;
            - text-anchor: start;
        - id: 3
          entity_index: 3
          xpos: 50
          ypos: 80
          styles:
            - font-size: 0.5em;
            - text-anchor: middle;
    horseshoe_scale:
      min: 0
      max: 8000
      width: 6
    color_stops:
      "0": "#5fb6ad"
      "2000": "#5fb6ad"

  - type: custom:flex-horseshoe-card
    view_layout:
      grid-area: flex2
    entities:
      - entity: sensor.deye_home_sunsynk_solar_power
        decimals: 0
        unit: W
        name: Solar
      - entity: sensor.deye_home_sunsynk_pv1_power
        decimals: 0
        unit: W
        name: PV1 W
      - entity: sensor.deye_home_sunsynk_pv2_power
        decimals: 0
        unit: W
        name: PV2 N
      - entity: sensor.deye_home_sunsynk_pv3_power
        decimals: 0
        unit: W
        name: PV3 E
      - entity: sensor.deye_home_sunsynk_pv1_voltage
        decimals: 0
        unit: V
      - entity: sensor.deye_home_sunsynk_pv2_voltage
        decimals: 0
        unit: V
      - entity: sensor.deye_home_sunsynk_pv3_voltage
        decimals: 0
        unit: V
      - entity: sensor.deye_home_sunsynk_day_pv_energy
        decimals: 2
        unit: kWh
        name: Daily
      - entity: sensor.solcast_pv_forecast_forecast_remaining_today
        decimals: 2
        unit: kWh
        name: Left Today
    show:
      horseshoe_style: autominmax
    layout:
      hlines:
        - id: 0
          xpos: 50
          ypos: 42
          length: 70
          styles:
            - opacity: 0.2;
        - id: 1
          xpos: 50
          ypos: 65
          length: 70
          styles:
            - opacity: 0.2;
      vlines:
        - id: 0
          xpos: 25
          ypos: 53
          length: 10
          styles:
            - opacity: 0.2;
        - id: 1
          xpos: 75
          ypos: 53
          length: 10
          styles:
            - opacity: 0.2;
      states:
        - id: 0
          entity_index: 0
          xpos: 50
          ypos: 30
          styles:
            - font-size: 3em;
            - opacity: 0.9;
            - text-anchor: middle;
        - id: 1
          entity_index: 1
          xpos: 15
          ypos: 47
          styles:
            - font-size: 1.1em;
            - text-anchor: middle;
        - id: 2
          entity_index: 2
          xpos: 50
          ypos: 47
          styles:
            - text-anchor: middle;
            - font-size: 1.1em;
        - id: 3
          entity_index: 3
          xpos: 85
          ypos: 47
          styles:
            - text-anchor: middle;
            - font-size: 1.1em;
        - id: 4
          entity_index: 4
          xpos: 15
          ypos: 57
          styles:
            - text-anchor: middle;
            - font-size: 0.9em;
        - id: 5
          entity_index: 5
          xpos: 50
          ypos: 57
          styles:
            - text-anchor: middle;
            - font-size: 0.9em;
        - id: 6
          entity_index: 6
          xpos: 85
          ypos: 57
          styles:
            - text-anchor: middle;
            - font-size: 0.9em;
        - id: 7
          entity_index: 7
          xpos: 0
          ypos: 7
          styles:
            - text-anchor: start;
            - font-size: 1.2em;
        - id: 8
          entity_index: 8
          xpos: 75
          ypos: 7
          styles:
            - text-anchor: start;
            - font-size: 1.2em;
      icons:
        - id: 0
          entity_index: 1
          xpos: 15
          ypos: 38
          align: center
          size: 0.7
        - id: 1
          entity_index: 2
          xpos: 50
          ypos: 38
          align: center
          size: 0.7
        - id: 2
          entity_index: 3
          xpos: 85
          ypos: 38
          align: center
          size: 0.7
      names:
        - id: 0
          entity_index: 0
          xpos: 50
          ypos: 95
          styles:
            - font-size: 1.2em;
            - text-anchor: middle;
        - id: 1
          entity_index: 1
          xpos: 15
          ypos: 70
          styles:
            - text-anchor: middle;
            - font-size: 0.55em;
        - id: 2
          entity_index: 2
          xpos: 50
          ypos: 70
          styles:
            - text-anchor: middle;
            - font-size: 0.55em;
        - id: 3
          entity_index: 3
          xpos: 85
          ypos: 70
          styles:
            - text-anchor: middle;
            - font-size: 0.55em;
        - id: 4
          entity_index: 7
          xpos: 0
          ypos: 12
          styles:
            - text-anchor: start;
            - font-size: 0.5em;
        - id: 5
          entity_index: 8
          xpos: 80
          ypos: 12
          styles:
            - font-size: 0.5em;
            - text-anchor: start;
    horseshoe_scale:
      min: 0
      max: 7000
      width: 6
    color_stops:
      "0": orange
      "2000": orange

  - type: custom:plotly-graph
    view_layout:
      grid-area: plotly2
    entities:
      - entity: sensor.deye_home_sunsynk_day_pv_energy_local
        name: |
          $fn ({ ys,meta }) =>
            "Solar" + "üîÜ" + "(" +ys[ys.length - 1]+"kWh)"
        marker:
          color: rgb(255, 155, 48)
      - entity: sensor.deye_home_sunsynk_day_load_energy_local
        name: |
          $fn ({ ys,meta }) =>
            "Load" + "‚ö°" + "(" +ys[ys.length - 1]+"kWh)"
        marker:
          color: rgb(95, 182, 173)
      - entity: sensor.deye_home_sunsynk_day_grid_import_energy_local
        name: |
          $fn ({ ys,meta }) =>
            "Grid Import" + "üí°" + "(" +ys[ys.length - 1]+"kWh)"
        marker:
          color: rgb(84, 144, 194)
      - entity: sensor.deye_home_sunsynk_day_battery_discharge_energy_local
        name: |
          $fn ({ ys,meta }) =>
            "Battery Discharge" + "üñ±Ô∏è" + "(" +ys[ys.length - 1]+"kWh)"
        marker:
          color: rgb(151, 90, 182)
      - entity: sensor.deye_home_sunsynk_day_battery_charge_energy_local
        name: |
          $fn ({ ys,meta }) =>
            "Battery Charge" + "üîã" + "(" +ys[ys.length - 1]+"kWh)"
        marker:
          color: yellow
    hours_to_show: 5d
    title: null
    refresh_interval: 120
    defaults:
      entity:
        statistic: state
        period: day
        type: bar
        texttemplate: "%{y}"
        filters:
          - filter: i>0
      yaxes:
        fixedrange: true
    layout:
      updatemenus:
        - buttons:
            - label: '30d'
              method: animate
              args:
                - layout:
                    xaxis.range: [null, null]
            - label: '14d'
              method: animate  
              args:
                - layout:
                    xaxis.range: [null, null]
            - label: '7d'
              method: animate
              args:
                - layout:
                    xaxis.range: [null, null]
          direction: null
          active: -1
          pad:
            r: 10
            t: 10
          type: buttons
          x: 1
          xanchor: auto
          y: 1
          yanchor: auto
      legend:
        bgcolor: rgba(0,0,0,0)
        yanchor: bottom
        xanchor: left
        x: 0
        y: 1
        font:
          size: 11
      height: 410
    config:
      displayModeBar: false
      scrollZoom: false
    time_offset: 12h

  - type: custom:flex-horseshoe-card
    view_layout:
      grid-area: flex3
    entities:
      - entity: sensor.deye_home_sunsynk_battery_soc
        decimals: 0
        unit: "%"
        name: BATTERY
      - entity: sensor.deye_home_sunsynk_battery_voltage
        decimals: 2
        unit: V
      - entity: sensor.deye_home_sunsynk_battery_current
        decimals: 2
        unit: A
      - entity: sensor.deye_home_sunsynk_battery_power
        decimals: 0
        unit: W
      - entity: sensor.deye_home_sunsynk_day_battery_discharge
        decimals: 2
        unit: kWh
        name: Discharge
      - entity: sensor.deye_home_sunsynk_day_battery_charge
        decimals: 2
        unit: kWh
        name: Charge
    show:
      horseshoe_style: autominmax
    layout:
      hlines:
        - id: 0
          xpos: 50
          ypos: 40
          length: 70
          styles:
            - opacity: 0.2;
        - id: 0
          xpos: 50
          ypos: 60
          length: 70
          styles:
            - opacity: 0.2;
      vlines:
        - id: 0
          xpos: 50
          ypos: 50
          length: 18
          styles:
            - opacity: 0.2;
      states:
        - id: 0
          entity_index: 0
          xpos: 50
          ypos: 33
          styles:
            - font-size: 3em;
            - opacity: 0.9;
            - text-anchor: middle;
        - id: 1
          entity_index: 1
          xpos: 44
          ypos: 53
          styles:
            - font-size: 1.5em;
            - text-anchor: end;
        - id: 2
          entity_index: 2
          xpos: 55
          ypos: 53
          styles:
            - text-anchor: start;
            - font-size: 1.5em;
        - id: 3
          entity_index: 3
          xpos: 50
          ypos: 75
          styles:
            - text-anchor: middle;
            - font-size: 2em;
        - id: 4
          entity_index: 4
          xpos: 76
          ypos: 7
          styles:
            - text-anchor: start;
            - font-size: 1.2em;
        - id: 5
          entity_index: 5
          xpos: 0
          ypos: 7
          styles:
            - text-anchor: start;
            - font-size: 1.2em;
      icons:
        - id: 0
          entity_index: 1
          xpos: 30
          ypos: 52
          align: start
          size: 1
      names:
        - id: 0
          entity_index: 0
          xpos: 50
          ypos: 95
          styles:
            - font-size: 1.2em;
            - text-anchor: middle;
        - id: 1
          entity_index: 4
          xpos: 81
          ypos: 12
          styles:
            - font-size: 0.5em;
            - text-anchor: start;
        - id: 2
          entity_index: 5
          xpos: 0
          ypos: 12
          styles:
            - font-size: 0.5em;
            - text-anchor: start;
    horseshoe_scale:
      min: 0
      max: 100
      width: 6
    color_stops:
      "0": pink
      "2000": pink

  - type: custom:plotly-graph
    view_layout:
      grid-area: plotly3
    hours_to_show: 4d
    time_offset: 2.5d
    refresh_interval: auto
    title: Solar Forecast & Battery Overview
    entities:
      - entity: sensor.deye_home_sunsynk_solar_power
        name: Current Solar Power
        line:
          color: rgb(255, 155, 48)
          shape: spline
          width: 2
        fill: tozeroy
        fillcolor: rgba(255, 155, 48, 0.3)
        yaxis: y1
        show_value: false
        showlegend: true
      - entity: sensor.solcast_pv_forecast_forecast_remaining_today
        name: |
          $fn ({ ys,meta }) =>
            "Remaining Today" + "üåû" + "(" +ys[ys.length - 1]+"kWh)"
        line:
          color: rgb(125, 125, 125)
          shape: spline
          width: 1
        fill: tozeroy
        fillcolor: rgba(125, 125, 125, 0.2)
        yaxis: y2
        showlegend: true
      - entity: sensor.deye_home_sunsynk_battery_soc
        name: |
          $fn ({ ys,meta }) =>
            "Battery SOC" + "üîã" + "(" +ys[ys.length - 1]+"%)"
        line:
          color: red
          shape: spline
          width: 2
        yaxis: y3
        show_value: true
        showlegend: true
        visible: true
      - entity: sensor.deye_home_sunsynk_day_pv_energy
        name: |
          $fn ({ ys,meta }) =>
            "Daily Solar" + "‚òÄÔ∏è" + "(" +ys[ys.length - 1]+"kWh)"
        line:
          color: rgb(255, 200, 0)
          shape: spline
          width: 1
        yaxis: y2
        showlegend: true
    defaults:
      yaxes:
        fixedrange: true
    layout:
      height: 350
      margin:
        t: 55
        l: 50
        r: 50
      showlegend: true
      legend:
        x: 0.02
        y: 0.98
        bgcolor: rgba(0,0,0,0.1)
        font:
          size: 10
      yaxis:
        title: Power (W)
        side: left
        fixedrange: true
      yaxis2:
        title: Energy (kWh)
        side: right
        overlaying: y
        fixedrange: true
      yaxis3:
        title: SOC (%)
        side: right
        overlaying: y
        position: 0.95
        range:
          - 0
          - 100
        fixedrange: true
      annotations:
        - text: |-
            $fn ({hass}) =>
              "<span style='font-size: 18px; color: orange;'>"
              + Number(hass.states['sensor.deye_home_sunsynk_day_pv_energy'].state).toFixed(1) + "kWh</span><br>"
              +  "<span style='font-size: 12px;'>Generated Today</span>"
          xref: paper
          yref: paper
          xanchor: left
          yanchor: top
          x: 0.02
          y: 0.85
          showarrow: false
        - text: |-
            $fn ({hass}) =>
              "<span style='font-size: 18px; color: dodgerblue;'>"
              + Number(hass.states['sensor.solcast_pv_forecast_forecast_remaining_today'].state).toFixed(1) + "kWh</span><br>"
              +  "<span style='font-size: 12px;'>Remaining Today</span>"
          xref: paper
          yref: paper
          xanchor: left
          yanchor: top
          x: 0.02
          y: 0.75
          showarrow: false
        - text: |-
            $fn ({hass}) =>
              "<span style='font-size: 18px; color: red;'>"
              + Number(hass.states['sensor.deye_home_sunsynk_battery_soc'].state) + "%</span><br>"
              +  "<span style='font-size: 12px;'>Battery SOC</span>"
          xref: paper
          yref: paper
          xanchor: left
          yanchor: top
          x: 0.02
          y: 0.65
          showarrow: false
    config:
      scrollZoom: false
      displayModeBar: false

  - type: custom:plotly-graph
    view_layout:
      grid-area: pie1
    title: Solar Generation Purpose
    entities:
      - entity: sensor.deye_home_sunsynk_day_load_energy
        type: pie
        hole: 0.6
        values: >-
          $ex [
          hass.states["sensor.deye_home_sunsynk_day_battery_charge_energy_local"].state,
          hass.states["sensor.deye_home_sunsynk_day_load_energy_local"].state
           ]
        labels:
          - Battery Charging
          - Direct Consumption
        marker:
          colors:
            - rgb(84, 144, 194)
            - rgb(95, 182, 173)
        textinfo: value+percent
    hours_to_show: 1
    refresh_interval: auto
    layout:
      height: 350
      margin:
        t: 60
        l: 20
        r: 20
      showlegend: false
      annotations:
        - text: |-
            $fn ({hass}) =>
              "<span style='font-size: 18px; color: rgb(84, 144, 194);'>"
              + Number(hass.states['sensor.deye_home_sunsynk_day_battery_charge_energy_local'].state).toFixed(1) + "kWh</span><br>"
              +  "<span style='font-size: 12px;'>Charging</span>"
          xref: paper
          yref: paper
          xanchor: center
          yanchor: center
          x: 0.8
          y: 1.15
          showarrow: false
        - text: |-
            $fn ({hass}) =>
              "<span style='font-size: 18px; color: rgb(95, 182, 173);'>"
              + Number(hass.states['sensor.deye_home_sunsynk_day_load_energy_local'].state).toFixed(1) + "kWh</span><br>"
              +  "<span style='font-size: 12px;'>Consumption</span>"
          xref: paper
          yref: paper
          xanchor: center
          yanchor: center
          x: 0.2
          y: 1.15
          showarrow: false
    config:
      displayModeBar: false

  - type: custom:plotly-graph
    view_layout:
      grid-area: pie2
    title: Energy Sources Today
    entities:
      - entity: sensor.deye_home_sunsynk_day_load_energy
        type: pie
        hole: 0.6
        values: >-
          $ex [
          hass.states["sensor.deye_home_sunsynk_day_battery_discharge_energy_local"].state,
          hass.states["sensor.deye_home_sunsynk_day_grid_import_energy_local"].state,
          hass.states["sensor.deye_home_sunsynk_day_pv_energy_local"].state ]
        labels:
          - Battery Discharge
          - Grid Import
          - Solar Generation
        marker:
          colors:
            - rgb(151, 90, 182)
            - rgb(84, 144, 194)
            - rgb(255, 155, 48)
        textinfo: value+percent
    hours_to_show: 1
    refresh_interval: auto
    layout:
      height: 350
      margin:
        t: 60
        l: 20
        r: 20
      showlegend: false
      annotations:
        - text: |-
            $fn ({hass}) =>
              "<span style='font-size: 18px; color: rgb(255, 155, 48);'>"
              + Number(hass.states['sensor.deye_home_sunsynk_day_pv_energy_local'].state).toFixed(1) + "kWh</span><br>"
              +  "<span style='font-size: 12px;'>Solar</span>"
          xref: paper
          yref: paper
          xanchor: center
          yanchor: center
          x: 0.15
          y: 1.15
          showarrow: false
        - text: |-
            $fn ({hass}) =>
              "<span style='font-size: 18px; color: rgb(151, 90, 182);'>"
              + Number(hass.states['sensor.deye_home_sunsynk_day_battery_discharge_energy_local'].state).toFixed(1) + "kWh</span><br>"
              +  "<span style='font-size: 12px;'>Battery</span>"
          xref: paper
          yref: paper
          xanchor: center
          yanchor: center
          x: 0.5
          y: 1.15
          showarrow: false
        - text: |-
            $fn ({hass}) =>
              "<span style='font-size: 18px; color: rgb(84, 144, 194);'>"
              + Number(hass.states['sensor.deye_home_sunsynk_day_grid_import_energy_local'].state).toFixed(1) + "kWh</span><br>"
              +  "<span style='font-size: 12px;'>Grid</span>"
          xref: paper
          yref: paper
          xanchor: center
          yanchor: center
          x: 0.85
          y: 1.15
          showarrow: false
    config:
      displayModeBar: false

  - type: custom:plotly-graph
    view_layout:
      grid-area: temp
    title: System Temperature Monitoring
    entities:
      - entity: sensor.deye_home_sunsynk_radiator_temperature
        name: |
          $fn ({ ys,meta }) =>
            "Radiator üå°Ô∏è " + ys[ys.length - 1] + "¬∞C"
        line:
          color: rgb(255, 140, 0)
          width: 3
          shape: spline
        mode: lines+markers
        marker:
          size: 6
          color: rgb(255, 140, 0)
        yaxis: y1
      - entity: sensor.deye_home_sunsynk_dc_transformer_temperature
        name: |
          $fn ({ ys,meta }) =>
            "DC Transformer ‚ö° " + ys[ys.length - 1] + "¬∞C"
        line:
          color: rgb(220, 20, 60)
          width: 3
          shape: spline
        mode: lines+markers
        marker:
          size: 6
          color: rgb(220, 20, 60)
        yaxis: y1
      - entity: sensor.deye_home_sunsynk_battery_temperature
        name: |
          $fn ({ ys,meta }) =>
            "Battery üîã " + ys[ys.length - 1] + "¬∞C"
        line:
          color: rgb(255, 20, 147)
          width: 3
          shape: spline
        mode: lines+markers
        marker:
          size: 6
          color: rgb(255, 20, 147)
        yaxis: y1
      - entity: sensor.bedroom_t_h_sensor_temperature
        name: |
          $fn ({ ys,meta }) =>
            "Environment üè† " + ys[ys.length - 1] + "¬∞C"
        line:
          color: rgb(34, 139, 34)
          width: 3
          shape: spline
        mode: lines+markers
        marker:
          size: 6
          color: rgb(34, 139, 34)
        yaxis: y1
    hours_to_show: 24
    refresh_interval: 60
    defaults:
      yaxes:
        fixedrange: true
    layout:
      height: 300
      margin:
        t: 50
        l: 50
        r: 50
        b: 50
      showlegend: true
      legend:
        x: 0.02
        y: 0.98
        bgcolor: rgba(0,0,0,0.1)
        font:
          size: 12
      yaxis:
        title: Temperature (¬∞C)
        range:
          - 15
          - 80
        fixedrange: true
        dtick: 10
        gridcolor: rgba(128,128,128,0.3)
      xaxis:
        gridcolor: rgba(128,128,128,0.3)
      plot_bgcolor: rgba(0,0,0,0)
      paper_bgcolor: rgba(0,0,0,0)
      shapes:
        - type: rect
          xref: paper
          yref: y
          x0: 0
          y0: 60
          x1: 1
          y1: 80
          fillcolor: rgba(255, 0, 0, 0.1)
          line:
            width: 0
        - type: rect
          xref: paper
          yref: y
          x0: 0
          y0: 45
          x1: 1
          y1: 60
          fillcolor: rgba(255, 165, 0, 0.1)
          line:
            width: 0
        - type: rect
          xref: paper
          yref: y
          x0: 0
          y0: 30
          x1: 1
          y1: 45
          fillcolor: rgba(255, 255, 0, 0.1)
          line:
            width: 0
      annotations:
        - text: |-
            $fn ({hass}) =>
              "<span style='font-size: 16px; color: rgb(255, 140, 0);'><b>"
              + Number(hass.states['sensor.deye_home_sunsynk_radiator_temperature'].state).toFixed(1) + "¬∞C</b></span><br>"
              +  "<span style='font-size: 11px;'>Radiator</span>"
          xref: paper
          yref: paper
          xanchor: center
          yanchor: top
          x: 0.2
          y: 1.15
          showarrow: false
        - text: |-
            $fn ({hass}) =>
              "<span style='font-size: 16px; color: rgb(220, 20, 60);'><b>"
              + Number(hass.states['sensor.deye_home_sunsynk_dc_transformer_temperature'].state).toFixed(1) + "¬∞C</b></span><br>"
              +  "<span style='font-size: 11px;'>DC Transformer</span>"
          xref: paper
          yref: paper
          xanchor: center
          yanchor: top
          x: 0.4
          y: 1.15
          showarrow: false
        - text: |-
            $fn ({hass}) =>
              "<span style='font-size: 16px; color: rgb(255, 20, 147);'><b>"
              + Number(hass.states['sensor.deye_home_sunsynk_battery_temperature'].state).toFixed(1) + "¬∞C</b></span><br>"
              +  "<span style='font-size: 11px;'>Battery</span>"
          xref: paper
          yref: paper
          xanchor: center
          yanchor: top
          x: 0.6
          y: 1.15
          showarrow: false
        - text: |-
            $fn ({hass}) =>
              "<span style='font-size: 16px; color: rgb(34, 139, 34);'><b>"
              + Number(hass.states['sensor.bedroom_t_h_sensor_temperature'].state).toFixed(1) + "¬∞C</b></span><br>"
              +  "<span style='font-size: 11px;'>Environment</span>"
          xref: paper
          yref: paper
          xanchor: center
          yanchor: top
          x: 0.8
          y: 1.15
          showarrow: false
        - text: "CRITICAL (60-80¬∞C)"
          xref: paper
          yref: paper
          xanchor: right
          yanchor: top
          x: 0.98
          y: 0.95
          font:
            size: 9
            color: red
          showarrow: false
        - text: "HOT (45-60¬∞C)"
          xref: paper
          yref: paper
          xanchor: right
          yanchor: top
          x: 0.98
          y: 0.88
          font:
            size: 9
            color: orange
          showarrow: false
        - text: "WARM (30-45¬∞C)"
          xref: paper
          yref: paper
          xanchor: right
          yanchor: top
          x: 0.98
          y: 0.81
          font:
            size: 9
            color: rgb(200, 200, 0)
          showarrow: false
        - text: "NORMAL (15-30¬∞C)"
          xref: paper
          yref: paper
          xanchor: right
          yanchor: top
          x: 0.98
          y: 0.74
          font:
            size: 9
            color: green
          showarrow: false
    config:
      scrollZoom: false
      displayModeBar: false

  - type: custom:plotly-graph
    view_layout:
      grid-area: efficiency
    title: System Efficiency Analytics - 7 Day Performance
    entities:
      - entity: sensor.deye_home_sunsynk_day_pv_energy_local
        name: |
          $fn ({ ys,meta }) =>
            "Daily Solar Generation: " + ys[ys.length - 1] + "kWh"
        type: scatter
        mode: lines+markers
        line:
          color: rgb(255, 155, 48)
          width: 3
        marker:
          size: 8
          color: rgb(255, 155, 48)
        yaxis: y1
      - entity: sensor.deye_home_sunsynk_day_load_energy_local
        name: |
          $fn ({ ys,meta }) =>
            "Daily Load Consumption: " + ys[ys.length - 1] + "kWh"
        type: scatter
        mode: lines+markers
        line:
          color: rgb(95, 182, 173)
          width: 3
        marker:
          size: 8
          color: rgb(95, 182, 173)
        yaxis: y1
      - entity: sensor.deye_home_sunsynk_day_grid_import_energy_local
        name: |
          $fn ({ ys,meta }) =>
            "Daily Grid Import: " + ys[ys.length - 1] + "kWh"
        type: scatter
        mode: lines+markers
        line:
          color: rgb(84, 144, 194)
          width: 3
        marker:
          size: 8
          color: rgb(84, 144, 194)
        yaxis: y1
      - entity: sensor.deye_home_sunsynk_day_battery_charge_energy_local
        name: |
          $fn ({ ys,meta }) =>
            "Daily Battery Charge: " + ys[ys.length - 1] + "kWh"
        type: scatter
        mode: lines+markers
        line:
          color: rgb(255, 200, 0)
          width: 2
          dash: dot
        marker:
          size: 6
          color: rgb(255, 200, 0)
        yaxis: y1
      - entity: sensor.deye_home_sunsynk_day_battery_discharge_energy_local
        name: |
          $fn ({ ys,meta }) =>
            "Daily Battery Discharge: " + ys[ys.length - 1] + "kWh"
        type: scatter
        mode: lines+markers
        line:
          color: rgb(151, 90, 182)
          width: 2
          dash: dot
        marker:
          size: 6
          color: rgb(151, 90, 182)
        yaxis: y1
    hours_to_show: 7d
    refresh_interval: 300
    defaults:
      entity:
        statistic: state
        period: day
        show_value: true
      yaxes:
        fixedrange: true
    layout:
      height: 400
      margin:
        t: 60
        l: 60
        r: 60
        b: 80
      showlegend: true
      legend:
        x: 0.02
        y: 0.98
        bgcolor: rgba(0,0,0,0.1)
        font:
          size: 11
      plot_bgcolor: rgba(0,0,0,0)
      paper_bgcolor: rgba(0,0,0,0)
      xaxis:
        title: Date
        gridcolor: rgba(128,128,128,0.2)
        type: date
      yaxis:
        title: Energy (kWh)
        side: left
        gridcolor: rgba(128,128,128,0.2)
        tickformat: .1f
      annotations:
        - text: |-
            $fn ({hass}) =>
              "<b>Today's Key Metrics:</b><br>" +
              "Solar Efficiency: " + (Number(hass.states['sensor.deye_home_sunsynk_day_pv_energy'].state) / 19.565).toFixed(2) + " kWh/kWp<br>" +
              "Grid Independence: " + Math.round((1 - (Number(hass.states['sensor.deye_home_sunsynk_day_grid_import'].state) / Number(hass.states['sensor.deye_home_sunsynk_day_load_energy'].state))) * 100) + "%<br>" +
              "Battery Efficiency: " + Math.round((Number(hass.states['sensor.deye_home_sunsynk_day_battery_discharge'].state) / Number(hass.states['sensor.deye_home_sunsynk_day_battery_charge'].state)) * 100) + "%<br>" +
              "Solar Utilization: " + Math.round(((Number(hass.states['sensor.deye_home_sunsynk_day_load_energy'].state) + Number(hass.states['sensor.deye_home_sunsynk_day_battery_charge'].state)) / Number(hass.states['sensor.deye_home_sunsynk_day_pv_energy'].state)) * 100) + "%"
          xref: paper
          yref: paper
          xanchor: center
          yanchor: top
          x: 0.5
          y: -0.1
          showarrow: false
          font:
            size: 12
            color: rgb(100, 100, 100)
          bgcolor: rgba(255, 255, 255, 0.8)
          bordercolor: rgb(200, 200, 200)
          borderwidth: 1
    config:
      scrollZoom: false
      displayModeBar: false

  - type: custom:plotly-graph
    view_layout:
      grid-area: financial
    title: Financial Dashboard - Cost Analysis & ROI Tracking
    entities:
      - entity: sensor.deye_home_sunsynk_day_grid_import_energy_local
        name: |
          $fn ({ ys,meta }) =>
            "Daily Grid Cost: R" + (ys[ys.length - 1] * 2.85).toFixed(2)
        type: scatter
        mode: lines+markers
        line:
          color: rgb(220, 53, 69)
          width: 3
        marker:
          size: 8
          color: rgb(220, 53, 69)
        yaxis: y1
        visible: true
      - entity: sensor.deye_home_sunsynk_day_pv_energy_local
        name: |
          $fn ({ ys,meta }) =>
            "Solar Value: R" + (ys[ys.length - 1] * 2.85).toFixed(2)
        type: scatter
        mode: lines+markers
        line:
          color: rgb(40, 167, 69)
          width: 3
        marker:
          size: 8
          color: rgb(40, 167, 69)
        yaxis: y1
        visible: true
      - entity: sensor.deye_home_sunsynk_day_load_energy_local
        name: |
          $fn ({ ys,meta }) =>
            "Load Without Solar: R" + (ys[ys.length - 1] * 2.85).toFixed(2)
        type: scatter
        mode: lines+markers
        line:
          color: rgb(255, 193, 7)
          width: 2
          dash: dot
        marker:
          size: 6
          color: rgb(255, 193, 7)
        yaxis: y1
        visible: true
    hours_to_show: 30d
    refresh_interval: 300
    defaults:
      entity:
        statistic: state
        period: day
        show_value: true
      yaxes:
        fixedrange: true
    layout:
      height: 400
      margin:
        t: 80
        l: 60
        r: 60
        b: 100
      showlegend: true
      legend:
        x: 0.02
        y: 0.98
        bgcolor: rgba(0,0,0,0.1)
        font:
          size: 11
      plot_bgcolor: rgba(0,0,0,0)
      paper_bgcolor: rgba(0,0,0,0)
      xaxis:
        title: Date
        gridcolor: rgba(128,128,128,0.2)
        type: date
      yaxis:
        title: Cost (Rands)
        side: left
        gridcolor: rgba(128,128,128,0.2)
        tickformat: .2f
        tickprefix: "R"
      annotations:
        - text: |-
            $fn ({hass}) =>
              "<b>üí∞ Daily Financial Summary:</b><br>" +
              "Grid Cost Today: R" + (Number(hass.states['sensor.deye_home_sunsynk_day_grid_import_energy_local'].state) * 2.85).toFixed(2) + "<br>" +
              "Solar Value Today: R" + (Number(hass.states['sensor.deye_home_sunsynk_day_pv_energy_local'].state) * 2.85).toFixed(2) + "<br>" +
              "Daily Savings: R" + ((Number(hass.states['sensor.deye_home_sunsynk_day_pv_energy_local'].state) - Number(hass.states['sensor.deye_home_sunsynk_day_grid_import_energy_local'].state)) * 2.85).toFixed(2) + "<br>" +
              "Self-Sufficiency: " + Math.round((1 - (Number(hass.states['sensor.deye_home_sunsynk_day_grid_import_energy_local'].state) / Number(hass.states['sensor.deye_home_sunsynk_day_load_energy_local'].state))) * 100) + "%"
          xref: paper
          yref: paper
          xanchor: left
          yanchor: top
          x: 0.02
          y: -0.12
          showarrow: false
          font:
            size: 12
            color: rgb(60, 60, 60)
          bgcolor: rgba(240, 248, 255, 0.9)
          bordercolor: rgb(173, 216, 230)
          borderwidth: 1
        - text: |-
            $fn ({hass}) =>
              "<b>üìä Monthly Projections:</b><br>" +
              "Est. Monthly Grid Cost: R" + (Number(hass.states['sensor.deye_home_sunsynk_day_grid_import_energy_local'].state) * 2.85 * 30).toFixed(0) + "<br>" +
              "Est. Monthly Solar Value: R" + (Number(hass.states['sensor.deye_home_sunsynk_day_pv_energy_local'].state) * 2.85 * 30).toFixed(0) + "<br>" +
              "Est. Monthly Savings: R" + (((Number(hass.states['sensor.deye_home_sunsynk_day_pv_energy_local'].state) - Number(hass.states['sensor.deye_home_sunsynk_day_grid_import_energy_local'].state)) * 2.85 * 30)).toFixed(0) + "<br>" +
              "Est. Annual Savings: R" + (((Number(hass.states['sensor.deye_home_sunsynk_day_pv_energy_local'].state) - Number(hass.states['sensor.deye_home_sunsynk_day_grid_import_energy_local'].state)) * 2.85 * 365)).toFixed(0)
          xref: paper
          yref: paper
          xanchor: center
          yanchor: top
          x: 0.5
          y: -0.12
          showarrow: false
          font:
            size: 12
            color: rgb(60, 60, 60)
          bgcolor: rgba(240, 255, 240, 0.9)
          bordercolor: rgb(144, 238, 144)
          borderwidth: 1
        - text: |-
            $fn ({hass}) =>
              "<b>üéØ ROI Analysis:</b><br>" +
              "System Cost: R400,000<br>" +
              "Current Daily Saving: R" + ((Number(hass.states['sensor.deye_home_sunsynk_day_pv_energy_local'].state) - Number(hass.states['sensor.deye_home_sunsynk_day_grid_import_energy_local'].state)) * 2.85).toFixed(2) + "<br>" +
              "Payback Period: " + (400000 / (((Number(hass.states['sensor.deye_home_sunsynk_day_pv_energy_local'].state) - Number(hass.states['sensor.deye_home_sunsynk_day_grid_import_energy_local'].state)) * 2.85 * 365) || 1)).toFixed(1) + " years<br>" +
              "25-Year Total Savings: R" + (((Number(hass.states['sensor.deye_home_sunsynk_day_pv_energy_local'].state) - Number(hass.states['sensor.deye_home_sunsynk_day_grid_import_energy_local'].state)) * 2.85 * 365 * 25) - 400000).toFixed(0)
          xref: paper
          yref: paper
          xanchor: right
          yanchor: top
          x: 0.98
          y: -0.12
          showarrow: false
          font:
            size: 12
            color: rgb(60, 60, 60)
          bgcolor: rgba(255, 248, 220, 0.9)
          bordercolor: rgb(255, 215, 0)
          borderwidth: 1
    config:
      scrollZoom: false
      displayModeBar: false
